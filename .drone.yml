---
hugo_env: &hugo_env
   BASE_URL: https://${DRONE_REPO_OWNER,,}.github.io/${DRONE_REPO_NAME}/

kind: pipeline
name: hugo-website
steps:
  - name: hugo-build-preprod
    image: peaceiris/hugo:v0.65.3-mod
    commands:
      - hugo --baseURL http://restaurant-swann-preprod.s3-website-us-east-1.amazonaws.com
    when:
      event: push
      branch: master

  - name: hugo-build-prod
    image: peaceiris/hugo:v0.65.3-mod
    commands:
      - hugo --baseURL http://restaurant-swann.s3-website-us-east-1.amazonaws.com
    when:
      event: tag
      branch: master


  - name: create-zip-archive
    image: alpine:latest
    commands:
      - apk add --no-cache zip
      - |
        if [ "${DRONE_TAG}" != "" ]; then
          zip -r restaurant-build-prod-${DRONE_TAG}.zip public/
        else
          zip -r restaurant-build-preprod-${DRONE_COMMIT_SHA:0:8}.zip public/
        fi
    when:
      event: [push, tag]
      branch: master

  - name: deploy-to-s3-preprod
    image: amazon/aws-cli:latest
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      AWS_SESSION_TOKEN:
        from_secret: aws_session_token
      AWS_DEFAULT_REGION: us-east-1
    commands:
      - aws s3 cp public/ s3://restaurant-swann-preprod/ --recursive --acl public-read
      - aws s3 cp restaurant-build-preprod-${DRONE_COMMIT_SHA:0:8}.zip s3://restaurant-swann-releases/preprod/ --acl public-read
    when:
      event: push
      branch: master

  - name: deploy-to-s3-prod
    image: amazon/aws-cli:latest
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      AWS_SESSION_TOKEN:
        from_secret: aws_session_token
      AWS_DEFAULT_REGION: us-east-1
    commands:
      - echo "Deploying to S3 prod"
      - aws s3 cp public/ s3://restaurant-swann/ --recursive --acl public-read
      - aws s3 cp restaurant-build-prod-${DRONE_TAG}.zip s3://restaurant-swann-releases/prod/ --acl public-read
    when:
      event: tag
      branch: master

---
kind: pipeline
name: promote-to-preprod
steps:
  - name: promote-to-preprod
    image: amazon/aws-cli:latest
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      AWS_SESSION_TOKEN:
        from_secret: aws_session_token
      AWS_DEFAULT_REGION: us-east-1
    commands:
      - echo "Promoting build ${DRONE_COMMIT_SHA:0:8} to preprod"
      - |
        if [ "${DRONE_PROMOTE_TARGET}" != "" ]; then
          # Télécharger le build depuis les releases
          aws s3 cp s3://restaurant-swann-releases/preprod/restaurant-build-preprod-${DRONE_COMMIT_SHA:0:8}.zip ./build.zip
          # Extraire le build
          unzip build.zip -d ./extracted/
          # Déployer vers preprod
          aws s3 cp ./extracted/public/ s3://restaurant-swann-preprod/ --recursive --acl public-read
          echo "Successfully promoted build ${DRONE_COMMIT_SHA:0:8} to preprod"
        else
          echo "No target specified for promotion"
          exit 1
        fi
    when:
      event: promote
      target: preprod

---
kind: pipeline
name: promote-to-prod
steps:
  - name: promote-to-prod
    image: amazon/aws-cli:latest
    environment:
      AWS_ACCESS_KEY_ID:
        from_secret: aws_access_key_id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws_secret_access_key
      AWS_SESSION_TOKEN:
        from_secret: aws_session_token
      AWS_DEFAULT_REGION: us-east-1
    commands:
      - echo "Promoting build ${DRONE_TAG} to prod"
      - |
        if [ "${DRONE_PROMOTE_TARGET}" != "" ]; then
          # Télécharger le build depuis les releases
          aws s3 cp s3://restaurant-swann-releases/prod/restaurant-build-prod-${DRONE_TAG}.zip ./build.zip
          # Extraire le build
          unzip build.zip -d ./extracted/
          # Déployer vers prod
          aws s3 cp ./extracted/public/ s3://restaurant-swann/ --recursive --acl public-read
          echo "Successfully promoted build ${DRONE_TAG} to prod"
        else
          echo "No target specified for promotion"
          exit 1
        fi
    when:
      event: promote
      target: prod